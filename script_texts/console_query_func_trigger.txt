/*проекция*/
select Name, Address from TransCompany
/*селекция*/
select * from Timetable where Repository=5
select * from Timetable where Date<='2020-10-25'

/*получить список номеров водителей и машин, которые за ними закреплены - соед*/
select PhoneNum,CarNumber from Driver
    inner join Crew on Driver.innDriver = Crew.Driver

/*показать, на каком участке какой мусор собирается - соед*/
select Address,KindGarbage from AssemPoint
    inner join Point_Cont on AssemPoint.idPoint = Point_Cont.idPoint
    inner join Container C on C.idType = Point_Cont.idType
    order by Address

/*на какие заводы увозят мусор со определенного полигона - соед*/
select distinct Factory.Name from Factory
    inner join Recyc_Fact RF on Factory.innFactory = RF.innFactory
    inner join RecycCompany RC on RC.innComp = RF.innComp
    inner join Repos_Pecyc RP on RF.innComp = RP.innComp
    where idRepos=1

/*найти в расписании ложные записи, где пункт сбора и мусоровоз относятся к разным транспорт-компаниям - объед*/
select idOperation,Address,Crew from Timetable
    inner join AssemPoint AP on AP.idPoint = Timetable.AssemPoint
    inner join Crew C on C.CarNumber = Timetable.Crew
    where not C.TransCompany=Ap.TransCompany or AP.TransCompany is null

/*вывести номера телефонов компаний (транспортной и по переработке) - объед*/
select Name,PhoneNum from TransCompany union select Name,PhoneNum from RecycCompany

/*вывести среди экипажей вывести те, кто незаполнил время вывоза мусора + указать, сколько раз такое было - группир*/
select Crew,PhoneNum,count(*) as kolvo from Timetable
    inner join Crew on Timetable.Crew = Crew.CarNumber
    inner join Driver on Driver.innDriver = Crew.Driver
    where Date<GETDATE() and ExportTime is null
    group by Crew,PhoneNum

/*посчитать кол-во раз, когда кто-то незаполнил время вывоза мусора - ф. агрегирования*/
select count(*) as kolvo from Timetable
    inner join Crew on Timetable.Crew = Crew.CarNumber
    inner join Driver on Driver.innDriver = Crew.Driver
    where Date<GETDATE() and ExportTime is null

/*с какого участка сколько раз увозили мусор - группир*/
select Address,count(*) as kolvo from Timetable
    inner join AssemPoint AP on AP.idPoint = Timetable.AssemPoint
    group by Address

/*показать машины, вместительность которых меньше, чем объем контейнеров на участках компании, которой они принадлежат - группир*/
select CarNumber,Capacity,sum(Volume) as cont_volumes from Crew
    inner join AssemPoint AP on Crew.TransCompany = AP.TransCompany
    inner join Point_Cont PC on AP.idPoint = PC.idPoint
    inner join Container C on C.idType = PC.idType
    group by CarNumber, Capacity having sum(Volume)>Capacity

/*вывести список транспортных компаний, у которых нет машин - разность*/
select Name from TransCompany
    where not exists(select TransCompany from Crew
                    where idCompany=Crew.TransCompany)

/*получение списка свалок мусора, невостребованных в опр месяце - разность*/
select idRepos from Repository
    where not exists(select Repository from Timetable
                    where Date>'2020-10-31' and Date<'2020-11-30' and idRepos=Repository)

/*список пунктов сбора, время доступа которых неизвестно, но мусор оттуда забирают во второй половине дня - разность*/
select distinct AssemPoint from Timetable
    where ExportTime>'14:00:00.0000000'
    and not exists(select idPoint from AssemPoint
              where AccessTime is not null and AssemPoint=idPoint)

/*список участков неск транспорт-компаний, с которых уже вывезли мусор в ноябре - пересеч*/
select idPoint from AssemPoint
    where (TransCompany=2 or TransCompany=10)
    and  exists(select AssemPoint from Timetable
                where Date>'2020-10-31' and ExportTime is not null and idPoint=AssemPoint)

/*вывести список машин, которые обслуживали конкретный пункт сбора в какой-то промежуток времени - пересеч*/
select CarNumber from Crew
    where exists(select Crew from Timetable
                where AssemPoint=2 and Date<'2020-10-31' and ExportTime is not null and CarNumber=Crew)

/*список адресов, принадлежащих опр транспорт-компании, с которых мусор увозили на свалки опр компании - пересеч*/
select idPoint from AssemPoint
    where TransCompany=10
    and exists(select AssemPoint from Timetable
             inner join Repos_Pecyc on Repos_Pecyc.idRepos=Timetable.Repository
             where innComp=1234000000 and idPoint=AssemPoint)




/*триггер: при добавлении новой записи в расписание проверить, принадлежат ли машина и пункт сбора одной компании*/
--функция проверки, правильные ли параметры заданы для новой записи
create function IsNoteCorrect(@date DATE, @point INT, @crew VARCHAR(6), @repos INT, @extime TIME) returns int
    as
    begin
    if exists(select * from AssemPoint where AssemPoint.idPoint=@point)
            and exists(select * from Crew where Crew.CarNumber=@crew)
            and exists(select * from Repository where Repository.idRepos=@repos)
            and exists(select TransCompany from AssemPoint where idPoint=@point
                        and exists(select TransCompany from Crew where CarNumber=@crew
                                    and Crew.TransCompany=AssemPoint.TransCompany)) --чтобы из одной трансп компании
            and @date>=GETDATE()  --чтобы записи на старые даты не вставляли
            and @extime is null   --чтобы заранее не заполняли время фактич вывоза
        return 1;
    return 0;
    end
go --разделение запросов на пакеты

--!!!из-за того чтоб срабатывает после вставки, ошибку при несущ ключе выдает раньше вызова функции
create trigger triggerNote on Timetable for INSERT
    as
    begin
        --создание необх переменных
        declare @date DATE, @point INT, @crew VARCHAR(6), @repos INT, @extime TIME;

        --чтение данных новой записи в переменные
        set @date = (select Date from inserted);
        set @point = (select AssemPoint from inserted);
        set @crew = (select Crew from inserted);
        set @repos = (select Repository from inserted);
        set @extime = (select ExportTime from inserted);

        if dbo.IsNoteCorrect (@date,@point, @crew, @repos, @extime) = 0
            begin
                print 'DateError: Note is not correct';
                rollback;
            end
        else
            if @extime is null --прибавляем пока пропуск в таблицу рейтинга
            begin
                update Rating set SumSkip = SumSkip+1
                where CarNumber=@crew;
            end
    end
go

insert into Timetable (Date, AssemPoint, Crew, Repository) values ('2020-10-31',2,'a007aa',5) --wrong(date)
insert into Timetable (Date, AssemPoint, Crew, Repository,ExportTime) values ('2020-11-16',2,'a007aa',5,'08:20:00.0000000') --wrong(extime)
insert into Timetable (Date, AssemPoint, Crew, Repository) values ('2020-11-17',2,'c386at',5) --wrong(transcomp different)
insert into Timetable (Date, AssemPoint, Crew, Repository) values ('2020-11-17',3,'a007aa',2) --right

drop TRIGGER triggerNote
drop function IsNoteCorrect


/*триггер: при изменении записи в расписании время вывоза дб записано только в строчках с датой, = или < текущей*/
create trigger triggerExtime on Timetable for UPDATE
    as
    begin
        --создание необх переменных
        declare @extimenew TIME, @date DATE;

        set @extimenew = (select ExportTime from inserted);
        set @date = (select Date from inserted);

        if  @date>GETDATE() and @extimenew is not null --хотят поставить время на еще не совершенную операцию
            begin
                print 'DateError: Changes are not possible';
                rollback;
            end
    end
go

drop TRIGGER triggerExtime
update Timetable --wrong
    set ExportTime='11:10:00.0000000'
    where idOperation=24
update Timetable --right
    set ExportTime='11:10:00.0000000'
    where idOperation=13


/*триггер - обновление таблицы рейтинга после внесения изменений в таблицу расписания:
  добавили время вывоза - минус 1 пропуск
  удлили время вывоза - плюс 1 пропуск
  текущая цифра - кол-во пустых клеток (мб за счет будущих дат)
*/
--таблица - рейтинг экипажей
create table Rating(
    CarNumber varchar(6),
    SumSkip int, --кол-во пропущенных вывозов мусора
    constraint fk_rating foreign key (CarNumber) references Crew (CarNumber)
)

create trigger triggerRating on Timetable after UPDATE
    as
    begin
        declare @car VARCHAR(6), @extimenew TIME, @extimelast TIME,@date DATE;

        set @car = (select Crew from inserted);
        set @extimenew = (select ExportTime from inserted);
        set @extimelast = (select ExportTime from deleted);
        set @date = (select Date from inserted);

        if exists(select * from Rating where CarNumber = @car)
            begin
            if @date <= GETDATE() and @extimelast is null and @extimenew is not null --если только вписали время вывоза
                update Rating set SumSkip = SumSkip - 1
                where CarNumber = @car;
            if @date <= GETDATE() and @extimelast is not null and @extimenew is null --если удалили время вывоза
                update Rating set SumSkip = SumSkip + 1
                where CarNumber = @car;
            end;
        else --добавляем новую запись
            begin
            if @date <= GETDATE() and @extimelast is null and @extimenew is not null
                insert into Rating (CarNumber, SumSkip) values (@car,0);
            if @date <= GETDATE() and @extimelast is not null and @extimenew is null
                insert into Rating (CarNumber, SumSkip) values (@car,1);
            end
    end
go

drop TRIGGER triggerRating
update Timetable
    set ExportTime='23:23:00'
    where idOperation=22

update Driver set innDriver = 123456789123 where innDriver = 144444443788
update Crew set Driver = 123456789123 where Driver = 144444443788